name: Publish to PyPI

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine setuptools wheel

      - name: Auto-increment version
        id: version
        run: |
          # Get current version
          CURRENT_VERSION=$(python -c "import re; content=open('setup.py').read(); print(re.search(r\"version='([^']+)'\", content).group(1))")
          echo "Current version: $CURRENT_VERSION"

          # Parse version (0.1.0 -> 0, 1, 0)
          IFS='.' read -r -a VERSION_PARTS <<< "$CURRENT_VERSION"
          MAJOR="${VERSION_PARTS[0]}"
          MINOR="${VERSION_PARTS[1]}"
          PATCH="${VERSION_PARTS[2]}"

          # Increment patch
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="${MAJOR}.${MINOR}.${NEW_PATCH}"

          echo "New version: $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

          # Update setup.py
          sed -i "s/version='${CURRENT_VERSION}'/version='${NEW_VERSION}'/" setup.py

          # Update HISTORY.rst
          TODAY=$(date +%Y-%m-%d)
          COMMIT_MSG=$(git log -1 --pretty=%B | head -1)

          echo "=======" > HISTORY.rst.new
          echo "History" >> HISTORY.rst.new
          echo "=======" >> HISTORY.rst.new
          echo "" >> HISTORY.rst.new
          echo "${NEW_VERSION} (${TODAY})" >> HISTORY.rst.new
          echo "------------------" >> HISTORY.rst.new
          echo "" >> HISTORY.rst.new
          echo "* Auto-release: ${COMMIT_MSG}" >> HISTORY.rst.new
          echo "" >> HISTORY.rst.new
          tail -n +5 HISTORY.rst >> HISTORY.rst.new
          mv HISTORY.rst.new HISTORY.rst

      - name: Commit version bump
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add setup.py HISTORY.rst
          git commit -m "ðŸ”– Bump version to ${{ steps.version.outputs.new_version }} [skip ci]"
          git push

      - name: Create git tag
        run: |
          git tag v${{ steps.version.outputs.new_version }}
          git push origin v${{ steps.version.outputs.new_version }}

      - name: Build package
        run: python -m build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN_2 }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.new_version }}
          files: dist/*
          generate_release_notes: true
          body: |
            ## ðŸš€ Release ${{ steps.version.outputs.new_version }}

            å®‰è£…ï¼š
            ```bash
            pip install --upgrade mofa-core
            ```
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
