---
import '~/assets/styles/tailwind.css';

import { getI18N } from '~/utils/i18nConfig';

import CommonMeta from '~/components/common/CommonMeta.astro';
import Favicons from '~/components/Favicons.astro';
import CustomStyles from '~/components/CustomStyles.astro';
import ApplyColorMode from '~/components/common/ApplyColorMode.astro';
import Metadata from '~/components/common/Metadata.astro';
import SiteVerification from '~/components/common/SiteVerification.astro';
import Analytics from '~/components/common/Analytics.astro';
import BasicScripts from '~/components/common/BasicScripts.astro';

// Comment the line below to disable View Transitions
import { ClientRouter } from 'astro:transitions';

import type { MetaData as MetaDataType } from '~/types';
import { LANGUAGES, type Language } from '~/utils/i18nConfig';

export interface Props {
  metadata?: MetaDataType;
  currentLang?: Language;
  i18n?: any;
}

const { metadata = {}, currentLang, i18n } = Astro.props;

// Use the provided i18n config or create a new one based on the current URL
const I18N = i18n || getI18N(Astro.url);
const lang = currentLang || I18N.language;
const { textDirection } = I18N;

console.log("Layout using language:", lang);
---

<!doctype html>
<html lang={lang} dir={textDirection} class="2xl:text-[20px]">
  <head>
    <CommonMeta />
    <Favicons />
    <CustomStyles />
    <ApplyColorMode />
    <Metadata {...metadata} />
    <SiteVerification />
    <Analytics />

    <!-- Comment the line below to disable View Transitions -->
    <ClientRouter fallback="swap" />
    
    <!-- Language initialization script -->
    <script is:inline define:vars={{ lang, languages: LANGUAGES }}>
      (function() {
        // Store the current language in localStorage
        localStorage.setItem('language', lang);
        
        // Function to get URL parameters
        function getUrlParam(name) {
          const urlParams = new URLSearchParams(window.location.search);
          return urlParams.get(name);
        }
        
        // Check if we need to redirect based on language settings
        function checkLanguageRedirect() {
          // If URL already has a lang parameter, respect it
          const urlLang = getUrlParam('lang');
          if (urlLang && languages.includes(urlLang)) {
            return;
          }
          
          // If localStorage has a language that's different from the current one,
          // and there's no lang parameter in the URL, redirect
          const storedLang = localStorage.getItem('language');
          if (storedLang && storedLang !== lang && languages.includes(storedLang)) {
            const url = new URL(window.location.href);
            url.searchParams.set('lang', storedLang);
            window.location.href = url.toString();
          }
        }
        
        // Run the check
        checkLanguageRedirect();
      })();
    </script>
  </head>

  <body class="antialiased text-default bg-page tracking-tight">
    <slot />

    <BasicScripts />
  </body>
</html>
